def artifactname = "sp-boot-app.jar"
def repoName = "sp-boot-app-repo"
def pipelineName = "devops_parallel_pipeline_ui"
def semanticVersion = "${env.BUILD_NUMBER}.0.0"
def packageName = "spboot-package_${env.BUILD_NUMBER}"
def version = "${env.BUILD_NUMBER}.0"

pipeline {
    agent any
    tools {
        maven 'Maven'
    }
    stages {
        stage("checkout") {
            steps {
                echo "Building Pipeline..."
                checkout scm
            }
        }

        stage("build") {
            steps {
                sh 'mvn clean install -DskipTests'
                echo 'Building..Pipeline'
                echo "Pipeline name is ${env.JOB_NAME}"
                echo "Pipleine run rumber is ${env.BUILD_NUMBER}"
                echo "Stage name is ${env.STAGE_NAME}"
                echo "GIT branch is ${env.GIT_BRANCH}"
                echo "globalprops -- ${env.snartifacttoolId} -- ${env.snhost} -- ${env.snuser} -- ${env.snpassword} "

                snDevOpsArtifact(artifactsPayload:"""{"artifacts": [{"name": "devops_pipeline_build_artifact.jar","version": "${version}","semanticVersion": "${semanticVersion}","repositoryName": "devops_pipeline_repo"}],"stageName": "build"}""")
                snDevOpsPackage(name: "devops_pipeline_package1", artifactsPayload:"""{"artifacts": [{"name": "devops_pipeline_build_artifact.jar","version": "${version}","semanticVersion": "${semanticVersion}","repositoryName": "devops_pipeline_repo"}],"stageName": "build"}""")

            }
        }

        stage('inttests') {
            steps {
                echo "Integration Test"
                sh "mvn test"
                sleep 5
            }
            post {
                always {
                    junit '**/target/surefire-reports/*.xml'
                }
            }
        }

        stage("stage") {
            steps {
                snDevOpsArtifact(artifactsPayload:"""{"artifacts": [{"name": "devops_pipeline_stage_artifact.jar","version": "${version}","semanticVersion": "${semanticVersion}","repositoryName": "devops_pipeline_repo2"}],"stageName": "stage"}""")
                sleep 5
                snDevOpsPackage(name: "devops_pipeline_package2", artifactsPayload:"""{"artifacts": [{"name": "devops_pipeline_stage_artifact.jar","version": "${version}","semanticVersion": "${semanticVersion}","repositoryName": "devops_pipeline_repo2"}],"stageName": "stage"}""")
                sleep 5
                snDevOpsChange()
                echo "deploy in prod"
            }
        }

        stage('unit-tests') {
            steps {
                echo "Unit Test"
                sh "mvn test"
                sleep 5
            }
            post {
                always {
                    junit '**/target/surefire-reports/*.xml'
                }
            }
        }

        stage("deploy") {
            steps {
                echo "deploy in prod"
                sleep 5
                snDevOpsChange()
            }
        }
    }
}