pipeline {
    agent any
    stages {
        stage('Stage 1') {
            when {
                equals expected: 2, actual: 3
            }
            steps {
            	sleep 5
                //snDevOpsChange()
                echo 'Executing stage 1'
                //sh 'fail'
                //error("Build failed because of this and that..")
                
            }
        }
        stage('Stage 2') {
            when {
                equals expected: 2, actual: 2
            }
            environment {
	    		 SCANNER_HOME = tool 'sonarScanner'
	  		}
            steps {
                echo 'Executing stage 2'
                // sh 'fail'
                //snDevOpsChange()
                sleep 5
                //error("Build failed because of this and that..")
                
                withSonarQubeEnv('sonarQube_local') 
                {
			       sh '${SCANNER_HOME}/bin/sonar-scanner -Dproject.settings=${SCANNER_HOME}/conf/qa-sonar-scanner.properties'
			    }
            }
        }


        stage('Stage 3') {
            when {
                equals expected: 2, actual: 3
                
            }
            steps {
            	sleep 5
            	
                //snDevOpsChange()
 				//sh 'false'
                error("Build failed because of this and that..")
                echo 'Executing stage 3'
                
            }
        }
        

    }
}