def artifactname = "sp-boot-app.jar"
def repoName = "sp-boot-app-repo"
def pipelineName = "devops_balu_pipeline"
def semanticVersion = "${env.BUILD_NUMBER}.0.0"
def packageName = "spboot-package_${env.BUILD_NUMBER}"
def version = "${env.BUILD_NUMBER}.0"
def pkgName = "sp-boot-package"

pipeline {
  agent any
  tools {
       maven 'Maven'
   }
  stages {
       stage('Build') {
           steps {
              
              //snDevOpsChange() //#BALU-9
              sh 'mvn -B -DskipTests clean compile'
 
           }
       }
       stage('Test') {
       
	       environment {
	    		 SCANNER_HOME = tool 'sonarScanner'
	  		}
           steps {


               sh 'mvn test'
               
				//withSonarQubeEnv('Sonar_Cloud') {
				//	sh '${SCANNER_HOME}/bin/sonar-scanner -Dproject.settings=${SCANNER_HOME}/conf/qa-sonar-scanner-cloud.properties'
			       
	        	//}
 
        		//withSonarQubeEnv('sonarQube_local') {
			       //sh '${SCANNER_HOME}/bin/sonar-scanner -Dproject.settings=${SCANNER_HOME}/conf/qa-sonar-scanner.properties'
			    //}
			
	       
           }
           post {
                    always {
                junit "**/target/surefire-reports/*.xml"
             }
           }
	   
       }
      stage('Deploy') {
                 steps {
                    
                    echo 'Deploy ....'
		    		snDevOpsChange(ignoreErrors: true)

                 }
      }

     stage('PublishArtifacts') { 
	            steps {

	               
	               snDevOpsChange(ignoreErrors: true)


	               echo 'Publishing Artifacts....'
                	sleep(time:65,unit:"SECONDS")
             	
                	
                	snDevOpsArtifact(artifactsPayload: """{"artifacts": [{"name": "${artifactname}", "version": "1.${env.BUILD_NUMBER}","semanticVersion": "1.${env.BUILD_NUMBER}.0","repositoryName": "${repoName}"}],"branchName":"master"}""")

	            }
	            
	        }

		stage('PublishPackage') {
         steps {

            echo 'Publishing Package....'
            // format-1
            //snDevOpsPackage(name: "newPackage", artifactsPayload: """{"artifacts": [{"name": "first_repo.jar","repositoryName": "first_repo","version": "${version}"},{"name": "sa-frontend.jar","repositoryName": "services-1031","version": "9.2"}],"branchName":"master"}""")
            
            //format-2
            //snDevOpsPackage(name: "newPackage", artifactsPayload: """{"artifacts": [{"name": "sa-web.jar","repositoryName": "services-1031","currentBuildInfo" : "true"},{"name": "sa-frontend.jar","repositoryName": "services-1031","currentBuildInfo" : "true"}],"branchName":"master"}""")
         
         	// format -3
         	//snDevOpsPackage(name: "balu-package", artifactsPayload: """{"artifacts": [{"name": "First_repo.jar","repositoryName": "First_repo","version":${version}}],"pipelineName": "balu_pipeline","taskExecutionNumber":"30","stageName":"PublishPackage","branchName": "master"}""")

         	// format-4
         	snDevOpsPackage(name: "${pkgName}-${env.BUILD_NUMBER}", artifactsPayload: """{"artifacts":[{"name": "${artifactname}", "version": "1.${env.BUILD_NUMBER}", "repositoryName": "${repoName}"}], "branchName":"master"}""")

         	sh 'sleep 10'
         	//snDevOpsPackage(name: "${pkgName}-${env.BUILD_NUMBER}", artifactsPayload: """{"artifacts":[{"name": "${artifactname}", "version": "1.${env.BUILD_NUMBER}", "repositoryName": "${repoName}"}], "branchName":"master"}""")
 
 			echo "package published , creating CR..."
 			snDevOpsChange(ignoreErrors: true)
 			
            }
            
            
 		} //end of stage
 

	
	 }

}
